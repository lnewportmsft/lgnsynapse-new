{
	"name": "Obtain credentials with TokenLibrary",
	"properties": {
		"folder": {
			"name": "PySpark"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "233f006a-21ef-4170-b4dc-766b9cfafbba"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"For latest documentation please run TokenLibrary.help() from Notebook\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"# By default Synapse uses AAD passthrough for authentication\n",
					"# However, Linked services can be used for storing and retreiving credentials (e.g, account key)\n",
					"# Example connection string (for storage): \"DefaultEndpointsProtocol=https;AccountName=<accountname>;AccountKey=<accountkey>\"\n",
					"\n",
					"connection_string = TokenLibrary.getConnectionString(\"<linkedServiceName>\")\n",
					"account_key = TokenLibrary.getConnectionStringAsMap(\"<linkedServiceName>\").get(\"AccountKey\")"
				],
				"execution_count": null
			}
		]
	}
}